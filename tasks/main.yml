---
- name: Installing andrewrothstein.unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for installation in {{ julia_install_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ julia_install_dir }}'
  changed_when: false
  register: julia_binary
- name: Downloading and installing julia
  when: not julia_binary.stat.exists
  block:
    - name: Downloading {{ julia_url }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ julia_url }}'
        dest: '{{ julia_tmp_tgz }}'
        checksum: '{{ julia_checksum }}'
        mode: '644'
    - name: Unarchiving {{ julia_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ julia_tmp_tgz }}'
        dest: '{{ julia_parent_install_dir }}'
        creates: '{{ julia_install_dir }}'
  always:
    - name: Rm {{ julia_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ julia_tmp_tgz }}'
        state: absent
- name: Linking executables in {{ julia_install_dir }}/bin to {{ julia_parent_install_dir }}/bin
  become: true
  become_user: root
  with_items:
    - julia
  ansible.builtin.file:
    src: '{{ julia_install_dir }}/bin/{{ item }}'
    dest: '{{ julia_parent_install_dir }}/bin/{{ item }}'
    state: link
